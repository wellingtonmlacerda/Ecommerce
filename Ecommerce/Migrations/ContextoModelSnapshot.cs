// <auto-generated />
using System;
using Ecommerce.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Ecommerce.Migrations
{
    [DbContext(typeof(Contexto))]
    partial class ContextoModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.17")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Ecommerce.Models.BairroModel", b =>
                {
                    b.Property<int>("BAIR_PK_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("BAIR_APELIDO")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("BAIR_DESCRICAO")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("BAIR_EXCLUIDO")
                        .HasColumnType("bit");

                    b.Property<int?>("EnderecoModelENDE_PK_ID")
                        .HasColumnType("int");

                    b.HasKey("BAIR_PK_ID");

                    b.HasIndex("EnderecoModelENDE_PK_ID");

                    b.ToTable("BAIRROS");
                });

            modelBuilder.Entity("Ecommerce.Models.CidadeModel", b =>
                {
                    b.Property<int>("CIDA_PK_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CIDA_APELIDO")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("CIDA_DESCRICAO")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("CIDA_EXCLUIDO")
                        .HasColumnType("bit");

                    b.Property<int?>("EnderecoModelENDE_PK_ID")
                        .HasColumnType("int");

                    b.HasKey("CIDA_PK_ID");

                    b.HasIndex("EnderecoModelENDE_PK_ID");

                    b.ToTable("CIDADES");
                });

            modelBuilder.Entity("Ecommerce.Models.DiretivaModel", b =>
                {
                    b.Property<int>("DIRE_PK_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("DIRE_CODIGO")
                        .HasColumnType("float");

                    b.Property<DateTime>("DIRE_DATA_CADASTRO")
                        .HasColumnType("datetime2");

                    b.Property<string>("DIRE_DESCRICAO")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("DIRE_EXCLUIDO")
                        .HasColumnType("int");

                    b.Property<int>("DIRE_FK_GRUS")
                        .HasColumnType("int");

                    b.Property<string>("DIRE_NOME")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("DIRE_PK_ID");

                    b.HasIndex("DIRE_FK_GRUS");

                    b.ToTable("DIRETIVAS");
                });

            modelBuilder.Entity("Ecommerce.Models.EnderecoModel", b =>
                {
                    b.Property<int>("ENDE_PK_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ENDE_CEP")
                        .IsRequired()
                        .HasMaxLength(8)
                        .HasColumnType("nvarchar(8)");

                    b.Property<DateTime>("ENDE_DATA_CADASTRo")
                        .HasColumnType("datetime2");

                    b.Property<bool>("ENDE_EXCLUIDO")
                        .HasColumnType("bit");

                    b.Property<int>("ENDE_FK_BAIR")
                        .HasColumnType("int");

                    b.Property<int>("ENDE_FK_CIDA")
                        .HasColumnType("int");

                    b.Property<int>("ENDE_FK_ESTA")
                        .HasColumnType("int");

                    b.Property<int>("ENDE_FK_PAIS")
                        .HasColumnType("int");

                    b.Property<int>("ENDE_FK_PESS")
                        .HasColumnType("int");

                    b.Property<string>("ENDE_LOGRADOURO")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("ENDE_NUMERO")
                        .HasMaxLength(10)
                        .HasColumnType("int");

                    b.Property<bool>("Principal")
                        .HasColumnType("bit");

                    b.HasKey("ENDE_PK_ID");

                    b.HasIndex("ENDE_FK_BAIR");

                    b.HasIndex("ENDE_FK_CIDA");

                    b.HasIndex("ENDE_FK_ESTA");

                    b.HasIndex("ENDE_FK_PAIS");

                    b.HasIndex("ENDE_FK_PESS");

                    b.ToTable("ENDERECOS");
                });

            modelBuilder.Entity("Ecommerce.Models.EstadoModel", b =>
                {
                    b.Property<int>("ESTA_PK_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ESTA_APELIDO")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("ESTA_DESCRICAO")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("ESTA_EXCLUIDO")
                        .HasColumnType("bit");

                    b.Property<string>("ESTA_UF")
                        .IsRequired()
                        .HasMaxLength(2)
                        .HasColumnType("nvarchar(2)");

                    b.Property<int?>("EnderecoModelENDE_PK_ID")
                        .HasColumnType("int");

                    b.HasKey("ESTA_PK_ID");

                    b.HasIndex("EnderecoModelENDE_PK_ID");

                    b.ToTable("ESTADOS");
                });

            modelBuilder.Entity("Ecommerce.Models.Grupo_UsuarioModel", b =>
                {
                    b.Property<int>("GRUS_PK_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("DiretivaModelDIRE_PK_ID")
                        .HasColumnType("int");

                    b.Property<DateTime>("GRUS_DATA_CADASTRO")
                        .HasColumnType("datetime2");

                    b.Property<string>("GRUS_DESCRICAO")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool>("GRUS_EXCLUIDO")
                        .HasColumnType("bit");

                    b.Property<string>("GRUS_NOME")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("GRUS_STATUS")
                        .HasColumnType("int");

                    b.Property<int?>("UsuarioModelUSUA_PK_FK_PESS")
                        .HasColumnType("int");

                    b.HasKey("GRUS_PK_ID");

                    b.HasIndex("DiretivaModelDIRE_PK_ID");

                    b.HasIndex("UsuarioModelUSUA_PK_FK_PESS");

                    b.ToTable("GRUPO_USUARIOS");
                });

            modelBuilder.Entity("Ecommerce.Models.ItemModel", b =>
                {
                    b.Property<int>("ITEM_PK_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("ITEM_EXCLUIDO")
                        .HasColumnType("bit");

                    b.Property<int>("ITEM_FK_PEDI")
                        .HasColumnType("int");

                    b.Property<int>("ITEM_FK_PROD")
                        .HasColumnType("int");

                    b.Property<int>("ITEM_STATUS")
                        .HasColumnType("int");

                    b.HasKey("ITEM_PK_ID");

                    b.HasIndex("ITEM_FK_PEDI");

                    b.HasIndex("ITEM_FK_PROD");

                    b.ToTable("ITENS");
                });

            modelBuilder.Entity("Ecommerce.Models.PaisModel", b =>
                {
                    b.Property<int>("PAIS_PK_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("EnderecoModelENDE_PK_ID")
                        .HasColumnType("int");

                    b.Property<string>("PAIS_APELIDO")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PAIS_DESCRICAO")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PAIS_EXCLUIDO")
                        .HasColumnType("bit");

                    b.Property<byte[]>("PAIS_IMAGEM")
                        .HasColumnType("varbinary(max)");

                    b.HasKey("PAIS_PK_ID");

                    b.HasIndex("EnderecoModelENDE_PK_ID");

                    b.ToTable("PAISES");
                });

            modelBuilder.Entity("Ecommerce.Models.PedidoModel", b =>
                {
                    b.Property<int>("PEDI_PK_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("PEDI_DATA_CADASTRO")
                        .HasColumnType("int");

                    b.Property<DateTime?>("PEDI_DATA_PAGAMENTO")
                        .HasColumnType("datetime2");

                    b.Property<bool>("PEDI_EXCLUIDO")
                        .HasColumnType("bit");

                    b.Property<int>("PEDI_FK_PESS")
                        .HasColumnType("int");

                    b.Property<string>("PEDI_LOGRADOURO")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PEDI_STATUS")
                        .HasColumnType("int");

                    b.Property<double>("PEDI_VALOR_TOTAL")
                        .HasColumnType("float");

                    b.HasKey("PEDI_PK_ID");

                    b.HasIndex("PEDI_FK_PESS");

                    b.ToTable("PEDIDOS");
                });

            modelBuilder.Entity("Ecommerce.Models.PessoaModel", b =>
                {
                    b.Property<int>("PESS_PK_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("PESS_CNPJ")
                        .HasMaxLength(18)
                        .HasColumnType("nvarchar(18)");

                    b.Property<string>("PESS_CPF")
                        .HasMaxLength(14)
                        .HasColumnType("nvarchar(14)");

                    b.Property<DateTime>("PESS_DATA_CADASTRO")
                        .HasColumnType("datetime2");

                    b.Property<string>("PESS_EMAIL")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool>("PESS_EXCLUIDO")
                        .HasColumnType("bit");

                    b.Property<byte[]>("PESS_IMAGEM")
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("PESS_NOME")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("PESS_STATUS")
                        .HasColumnType("int");

                    b.Property<int>("PESS_TIPO")
                        .HasColumnType("int");

                    b.Property<int?>("UsuarioModelUSUA_PK_FK_PESS")
                        .HasColumnType("int");

                    b.HasKey("PESS_PK_ID");

                    b.HasIndex("UsuarioModelUSUA_PK_FK_PESS");

                    b.ToTable("PESSOAS");
                });

            modelBuilder.Entity("Ecommerce.Models.ProdutoModel", b =>
                {
                    b.Property<int>("PROD_PK_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("PROD_DESCRICAO")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool>("PROD_EXCLUIDO")
                        .HasColumnType("bit");

                    b.Property<int>("PROD_FK_CATE")
                        .HasColumnType("int");

                    b.Property<double>("PROD_QUANTIDADE_ESTOQUE")
                        .HasColumnType("float");

                    b.Property<int>("PROD_STATUS")
                        .HasColumnType("int");

                    b.Property<DateTime>("PROD_VALIDADE")
                        .HasColumnType("datetime2");

                    b.Property<double>("PROD_VALOR")
                        .HasColumnType("float");

                    b.Property<string>("PROD_VOLUME")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("PROD_PK_ID");

                    b.HasIndex("PROD_FK_CATE");

                    b.ToTable("PRODUTOS");
                });

            modelBuilder.Entity("Ecommerce.Models.Produto_CategoriaModel", b =>
                {
                    b.Property<int>("PRCA_PK_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("PRCA_DATA_CADASTRO")
                        .HasColumnType("datetime2");

                    b.Property<string>("PRCA_DESCRICAO")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool>("PRCA_EXCLUIDO")
                        .HasColumnType("bit");

                    b.Property<int>("PRCA_STATUS")
                        .HasColumnType("int");

                    b.Property<int?>("ProdutoModelPROD_PK_ID")
                        .HasColumnType("int");

                    b.HasKey("PRCA_PK_ID");

                    b.HasIndex("ProdutoModelPROD_PK_ID");

                    b.ToTable("PRODUTO_CATEGORIAS");
                });

            modelBuilder.Entity("Ecommerce.Models.Produto_ImagemModel", b =>
                {
                    b.Property<int>("PRIM_PK_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("PRIM_DATA_CADASTRO")
                        .HasColumnType("datetime2");

                    b.Property<string>("PRIM_DESCRICAO")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool>("PRIM_EXCLUIDO")
                        .HasColumnType("bit");

                    b.Property<int>("PRIM_FK_PROD")
                        .HasColumnType("int");

                    b.Property<byte[]>("PRIM_IMAGEM")
                        .HasColumnType("varbinary(max)");

                    b.Property<int>("PRIM_ORDEM")
                        .HasColumnType("int");

                    b.Property<bool>("PRIM_PRINCIPAL")
                        .HasColumnType("bit");

                    b.Property<int>("PRIM_STATUS")
                        .HasColumnType("int");

                    b.HasKey("PRIM_PK_ID");

                    b.HasIndex("PRIM_FK_PROD");

                    b.ToTable("PRODUTO_IMAGEMS");
                });

            modelBuilder.Entity("Ecommerce.Models.TelefoneModel", b =>
                {
                    b.Property<int>("TELE_PK_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("TELE_DATA_CADASTRO")
                        .HasColumnType("datetime2");

                    b.Property<int>("TELE_DD")
                        .HasColumnType("int");

                    b.Property<int>("TELE_DDI")
                        .HasColumnType("int");

                    b.Property<bool>("TELE_EXCLUIDO")
                        .HasColumnType("bit");

                    b.Property<int>("TELE_FK_PESS")
                        .HasColumnType("int");

                    b.Property<int>("TELE_NUMERO")
                        .HasColumnType("int");

                    b.Property<int>("TELE_PRINCIPAL")
                        .HasColumnType("int");

                    b.Property<byte>("TELE_TIPO")
                        .HasColumnType("tinyint");

                    b.HasKey("TELE_PK_ID");

                    b.HasIndex("TELE_FK_PESS");

                    b.ToTable("TELEFONES");
                });

            modelBuilder.Entity("Ecommerce.Models.UsuarioModel", b =>
                {
                    b.Property<int>("USUA_PK_FK_PESS")
                        .HasColumnType("int");

                    b.Property<DateTime>("USUA_DATA_CADASTRO")
                        .HasColumnType("datetime2");

                    b.Property<bool>("USUA_EXCLUIDO")
                        .HasColumnType("bit");

                    b.Property<int>("USUA_FK_GRUS")
                        .HasColumnType("int");

                    b.Property<string>("USUA_SENHA")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("USUA_STATUS")
                        .HasColumnType("int");

                    b.Property<string>("USUA_USUARIO")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("USUA_PK_FK_PESS");

                    b.HasIndex("USUA_FK_GRUS");

                    b.ToTable("USUARIOS");
                });

            modelBuilder.Entity("Ecommerce.Models.BairroModel", b =>
                {
                    b.HasOne("Ecommerce.Models.EnderecoModel", null)
                        .WithMany("Bairros")
                        .HasForeignKey("EnderecoModelENDE_PK_ID");
                });

            modelBuilder.Entity("Ecommerce.Models.CidadeModel", b =>
                {
                    b.HasOne("Ecommerce.Models.EnderecoModel", null)
                        .WithMany("Cidades")
                        .HasForeignKey("EnderecoModelENDE_PK_ID");
                });

            modelBuilder.Entity("Ecommerce.Models.DiretivaModel", b =>
                {
                    b.HasOne("Ecommerce.Models.Grupo_UsuarioModel", "Grupo_Usuario")
                        .WithMany()
                        .HasForeignKey("DIRE_FK_GRUS")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Grupo_Usuario");
                });

            modelBuilder.Entity("Ecommerce.Models.EnderecoModel", b =>
                {
                    b.HasOne("Ecommerce.Models.BairroModel", "Bairro")
                        .WithMany()
                        .HasForeignKey("ENDE_FK_BAIR")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Ecommerce.Models.CidadeModel", "Cidade")
                        .WithMany()
                        .HasForeignKey("ENDE_FK_CIDA")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Ecommerce.Models.EstadoModel", "Estado")
                        .WithMany()
                        .HasForeignKey("ENDE_FK_ESTA")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Ecommerce.Models.PaisModel", "Pais")
                        .WithMany()
                        .HasForeignKey("ENDE_FK_PAIS")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Ecommerce.Models.PessoaModel", "Pessoa")
                        .WithMany("Enderecos")
                        .HasForeignKey("ENDE_FK_PESS")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Bairro");

                    b.Navigation("Cidade");

                    b.Navigation("Estado");

                    b.Navigation("Pais");

                    b.Navigation("Pessoa");
                });

            modelBuilder.Entity("Ecommerce.Models.EstadoModel", b =>
                {
                    b.HasOne("Ecommerce.Models.EnderecoModel", null)
                        .WithMany("Estados")
                        .HasForeignKey("EnderecoModelENDE_PK_ID");
                });

            modelBuilder.Entity("Ecommerce.Models.Grupo_UsuarioModel", b =>
                {
                    b.HasOne("Ecommerce.Models.DiretivaModel", null)
                        .WithMany("Grupo_Usuarios")
                        .HasForeignKey("DiretivaModelDIRE_PK_ID");

                    b.HasOne("Ecommerce.Models.UsuarioModel", null)
                        .WithMany("Grupo_Usuarios")
                        .HasForeignKey("UsuarioModelUSUA_PK_FK_PESS");
                });

            modelBuilder.Entity("Ecommerce.Models.ItemModel", b =>
                {
                    b.HasOne("Ecommerce.Models.PedidoModel", "Pedido")
                        .WithMany("Itens")
                        .HasForeignKey("ITEM_FK_PEDI")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Ecommerce.Models.ProdutoModel", "Produto")
                        .WithMany()
                        .HasForeignKey("ITEM_FK_PROD")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Pedido");

                    b.Navigation("Produto");
                });

            modelBuilder.Entity("Ecommerce.Models.PaisModel", b =>
                {
                    b.HasOne("Ecommerce.Models.EnderecoModel", null)
                        .WithMany("Paises")
                        .HasForeignKey("EnderecoModelENDE_PK_ID");
                });

            modelBuilder.Entity("Ecommerce.Models.PedidoModel", b =>
                {
                    b.HasOne("Ecommerce.Models.PessoaModel", "Pessoa")
                        .WithMany("Pedidos")
                        .HasForeignKey("PEDI_FK_PESS")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Pessoa");
                });

            modelBuilder.Entity("Ecommerce.Models.PessoaModel", b =>
                {
                    b.HasOne("Ecommerce.Models.UsuarioModel", null)
                        .WithMany("Pessoas")
                        .HasForeignKey("UsuarioModelUSUA_PK_FK_PESS");
                });

            modelBuilder.Entity("Ecommerce.Models.ProdutoModel", b =>
                {
                    b.HasOne("Ecommerce.Models.Produto_CategoriaModel", "Categoria")
                        .WithMany()
                        .HasForeignKey("PROD_FK_CATE")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Categoria");
                });

            modelBuilder.Entity("Ecommerce.Models.Produto_CategoriaModel", b =>
                {
                    b.HasOne("Ecommerce.Models.ProdutoModel", null)
                        .WithMany("Categorias")
                        .HasForeignKey("ProdutoModelPROD_PK_ID");
                });

            modelBuilder.Entity("Ecommerce.Models.Produto_ImagemModel", b =>
                {
                    b.HasOne("Ecommerce.Models.ProdutoModel", "Produto")
                        .WithMany("Produto_Imagems")
                        .HasForeignKey("PRIM_FK_PROD")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Produto");
                });

            modelBuilder.Entity("Ecommerce.Models.TelefoneModel", b =>
                {
                    b.HasOne("Ecommerce.Models.PessoaModel", "Pessoa")
                        .WithMany("Telefones")
                        .HasForeignKey("TELE_FK_PESS")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Pessoa");
                });

            modelBuilder.Entity("Ecommerce.Models.UsuarioModel", b =>
                {
                    b.HasOne("Ecommerce.Models.Grupo_UsuarioModel", "Grupo_Usuario")
                        .WithMany()
                        .HasForeignKey("USUA_FK_GRUS")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Ecommerce.Models.PessoaModel", "Pessoa")
                        .WithMany()
                        .HasForeignKey("USUA_PK_FK_PESS")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Grupo_Usuario");

                    b.Navigation("Pessoa");
                });

            modelBuilder.Entity("Ecommerce.Models.DiretivaModel", b =>
                {
                    b.Navigation("Grupo_Usuarios");
                });

            modelBuilder.Entity("Ecommerce.Models.EnderecoModel", b =>
                {
                    b.Navigation("Bairros");

                    b.Navigation("Cidades");

                    b.Navigation("Estados");

                    b.Navigation("Paises");
                });

            modelBuilder.Entity("Ecommerce.Models.PedidoModel", b =>
                {
                    b.Navigation("Itens");
                });

            modelBuilder.Entity("Ecommerce.Models.PessoaModel", b =>
                {
                    b.Navigation("Enderecos");

                    b.Navigation("Pedidos");

                    b.Navigation("Telefones");
                });

            modelBuilder.Entity("Ecommerce.Models.ProdutoModel", b =>
                {
                    b.Navigation("Categorias");

                    b.Navigation("Produto_Imagems");
                });

            modelBuilder.Entity("Ecommerce.Models.UsuarioModel", b =>
                {
                    b.Navigation("Grupo_Usuarios");

                    b.Navigation("Pessoas");
                });
#pragma warning restore 612, 618
        }
    }
}
