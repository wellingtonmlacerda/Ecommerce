// <auto-generated />
using System;
using Ecommerce.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Ecommerce.Migrations
{
    [DbContext(typeof(Contexto))]
    [Migration("20221030185042_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.17")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Ecommerce.Models.BairroModel", b =>
                {
                    b.Property<int>("BAIR_PK_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Apelido")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("EnderecoModelENDE_PK_ID")
                        .HasColumnType("int");

                    b.Property<bool>("Excluido")
                        .HasColumnType("bit");

                    b.HasKey("BAIR_PK_ID");

                    b.HasIndex("EnderecoModelENDE_PK_ID");

                    b.ToTable("Bairros");
                });

            modelBuilder.Entity("Ecommerce.Models.CidadeModel", b =>
                {
                    b.Property<int>("CIDA_PK_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Apelido")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("EnderecoModelENDE_PK_ID")
                        .HasColumnType("int");

                    b.Property<bool>("Excluido")
                        .HasColumnType("bit");

                    b.HasKey("CIDA_PK_ID");

                    b.HasIndex("EnderecoModelENDE_PK_ID");

                    b.ToTable("Cidades");
                });

            modelBuilder.Entity("Ecommerce.Models.EnderecoModel", b =>
                {
                    b.Property<int>("ENDE_PK_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CEP")
                        .IsRequired()
                        .HasMaxLength(8)
                        .HasColumnType("nvarchar(8)");

                    b.Property<DateTime>("Data_Cadastro")
                        .HasColumnType("datetime2");

                    b.Property<int>("ENDE_FK_BAIR")
                        .HasColumnType("int");

                    b.Property<int>("ENDE_FK_CIDA")
                        .HasColumnType("int");

                    b.Property<int>("ENDE_FK_ESTA")
                        .HasColumnType("int");

                    b.Property<int>("ENDE_FK_PAIS")
                        .HasColumnType("int");

                    b.Property<int>("ENDE_FK_PESS")
                        .HasColumnType("int");

                    b.Property<bool>("Excluido")
                        .HasColumnType("bit");

                    b.Property<string>("Logradouro")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("Numero")
                        .HasMaxLength(10)
                        .HasColumnType("int");

                    b.Property<bool>("Principal")
                        .HasColumnType("bit");

                    b.HasKey("ENDE_PK_ID");

                    b.HasIndex("ENDE_FK_BAIR");

                    b.HasIndex("ENDE_FK_CIDA");

                    b.HasIndex("ENDE_FK_ESTA");

                    b.HasIndex("ENDE_FK_PAIS");

                    b.HasIndex("ENDE_FK_PESS");

                    b.ToTable("Enderecos");
                });

            modelBuilder.Entity("Ecommerce.Models.EstadoModel", b =>
                {
                    b.Property<int>("ESTA_PK_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Apelido")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("EnderecoModelENDE_PK_ID")
                        .HasColumnType("int");

                    b.Property<bool>("Excluido")
                        .HasColumnType("bit");

                    b.Property<string>("UF")
                        .IsRequired()
                        .HasMaxLength(2)
                        .HasColumnType("nvarchar(2)");

                    b.HasKey("ESTA_PK_ID");

                    b.HasIndex("EnderecoModelENDE_PK_ID");

                    b.ToTable("Estados");
                });

            modelBuilder.Entity("Ecommerce.Models.ItemModel", b =>
                {
                    b.Property<int>("ITEM_PK_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Excluido")
                        .HasColumnType("bit");

                    b.Property<int>("ITEM_FK_PEDI")
                        .HasColumnType("int");

                    b.Property<int>("ITEM_FK_PROD")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("ITEM_PK_ID");

                    b.HasIndex("ITEM_FK_PEDI");

                    b.HasIndex("ITEM_FK_PROD");

                    b.ToTable("Itens");
                });

            modelBuilder.Entity("Ecommerce.Models.PaisModel", b =>
                {
                    b.Property<int>("PAIS_PK_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Apelido")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("EnderecoModelENDE_PK_ID")
                        .HasColumnType("int");

                    b.Property<bool>("Excluido")
                        .HasColumnType("bit");

                    b.Property<byte[]>("Imagem")
                        .HasColumnType("varbinary(max)");

                    b.HasKey("PAIS_PK_ID");

                    b.HasIndex("EnderecoModelENDE_PK_ID");

                    b.ToTable("Paises");
                });

            modelBuilder.Entity("Ecommerce.Models.PedidoModel", b =>
                {
                    b.Property<int>("PEDI_PK_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Data_Cadastro")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Data_Pagamento")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Excluido")
                        .HasColumnType("bit");

                    b.Property<string>("Logradouro")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PEDI_FK_PESS")
                        .HasColumnType("int");

                    b.Property<double>("Valor_Total")
                        .HasColumnType("float");

                    b.Property<int>("status")
                        .HasColumnType("int");

                    b.HasKey("PEDI_PK_ID");

                    b.HasIndex("PEDI_FK_PESS");

                    b.ToTable("Pedidos");
                });

            modelBuilder.Entity("Ecommerce.Models.PessoaModel", b =>
                {
                    b.Property<int>("PESS_PK_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CNPJ")
                        .HasMaxLength(18)
                        .HasColumnType("nvarchar(18)");

                    b.Property<string>("CPF")
                        .HasMaxLength(14)
                        .HasColumnType("nvarchar(14)");

                    b.Property<DateTime>("Data_Cadastro")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool>("Excluido")
                        .HasColumnType("bit");

                    b.Property<byte[]>("Imagem")
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<int>("Tipo")
                        .HasColumnType("int");

                    b.HasKey("PESS_PK_ID");

                    b.ToTable("Pessoas");
                });

            modelBuilder.Entity("Ecommerce.Models.ProdutoModel", b =>
                {
                    b.Property<int>("PROD_PK_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Data_Cadastro")
                        .HasColumnType("datetime2");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool>("Excluido")
                        .HasColumnType("bit");

                    b.Property<byte[]>("Imagem")
                        .HasColumnType("varbinary(max)");

                    b.Property<double>("Quantidade_Estoque")
                        .HasColumnType("float");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<DateTime>("Validade")
                        .HasColumnType("datetime2");

                    b.Property<double>("Valor")
                        .HasColumnType("float");

                    b.Property<string>("Volume")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("PROD_PK_ID");

                    b.ToTable("Produtos");
                });

            modelBuilder.Entity("Ecommerce.Models.TelefoneModel", b =>
                {
                    b.Property<int>("TELE_PK_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("DD")
                        .HasColumnType("int");

                    b.Property<int>("DDI")
                        .HasColumnType("int");

                    b.Property<DateTime>("Data_Cadastro")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Excluido")
                        .HasColumnType("bit");

                    b.Property<int>("Numero")
                        .HasColumnType("int");

                    b.Property<int>("Principal")
                        .HasColumnType("int");

                    b.Property<int>("TELE_FK_PESS")
                        .HasColumnType("int");

                    b.Property<byte>("Tipo")
                        .HasColumnType("tinyint");

                    b.HasKey("TELE_PK_ID");

                    b.HasIndex("TELE_FK_PESS");

                    b.ToTable("Telefones");
                });

            modelBuilder.Entity("Ecommerce.Models.BairroModel", b =>
                {
                    b.HasOne("Ecommerce.Models.EnderecoModel", null)
                        .WithMany("Bairros")
                        .HasForeignKey("EnderecoModelENDE_PK_ID");
                });

            modelBuilder.Entity("Ecommerce.Models.CidadeModel", b =>
                {
                    b.HasOne("Ecommerce.Models.EnderecoModel", null)
                        .WithMany("Cidades")
                        .HasForeignKey("EnderecoModelENDE_PK_ID");
                });

            modelBuilder.Entity("Ecommerce.Models.EnderecoModel", b =>
                {
                    b.HasOne("Ecommerce.Models.BairroModel", "Bairro")
                        .WithMany()
                        .HasForeignKey("ENDE_FK_BAIR")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Ecommerce.Models.CidadeModel", "Cidade")
                        .WithMany()
                        .HasForeignKey("ENDE_FK_CIDA")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Ecommerce.Models.EstadoModel", "Estado")
                        .WithMany()
                        .HasForeignKey("ENDE_FK_ESTA")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Ecommerce.Models.PaisModel", "Pais")
                        .WithMany()
                        .HasForeignKey("ENDE_FK_PAIS")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Ecommerce.Models.PessoaModel", "Pessoa")
                        .WithMany("Enderecos")
                        .HasForeignKey("ENDE_FK_PESS")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Bairro");

                    b.Navigation("Cidade");

                    b.Navigation("Estado");

                    b.Navigation("Pais");

                    b.Navigation("Pessoa");
                });

            modelBuilder.Entity("Ecommerce.Models.EstadoModel", b =>
                {
                    b.HasOne("Ecommerce.Models.EnderecoModel", null)
                        .WithMany("Estados")
                        .HasForeignKey("EnderecoModelENDE_PK_ID");
                });

            modelBuilder.Entity("Ecommerce.Models.ItemModel", b =>
                {
                    b.HasOne("Ecommerce.Models.PedidoModel", "Pedido")
                        .WithMany("Itens")
                        .HasForeignKey("ITEM_FK_PEDI")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Ecommerce.Models.ProdutoModel", "Produto")
                        .WithMany()
                        .HasForeignKey("ITEM_FK_PROD")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Pedido");

                    b.Navigation("Produto");
                });

            modelBuilder.Entity("Ecommerce.Models.PaisModel", b =>
                {
                    b.HasOne("Ecommerce.Models.EnderecoModel", null)
                        .WithMany("Paises")
                        .HasForeignKey("EnderecoModelENDE_PK_ID");
                });

            modelBuilder.Entity("Ecommerce.Models.PedidoModel", b =>
                {
                    b.HasOne("Ecommerce.Models.PessoaModel", "Pessoa")
                        .WithMany("Pedidos")
                        .HasForeignKey("PEDI_FK_PESS")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Pessoa");
                });

            modelBuilder.Entity("Ecommerce.Models.TelefoneModel", b =>
                {
                    b.HasOne("Ecommerce.Models.PessoaModel", "Pessoa")
                        .WithMany("Telefones")
                        .HasForeignKey("TELE_FK_PESS")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Pessoa");
                });

            modelBuilder.Entity("Ecommerce.Models.EnderecoModel", b =>
                {
                    b.Navigation("Bairros");

                    b.Navigation("Cidades");

                    b.Navigation("Estados");

                    b.Navigation("Paises");
                });

            modelBuilder.Entity("Ecommerce.Models.PedidoModel", b =>
                {
                    b.Navigation("Itens");
                });

            modelBuilder.Entity("Ecommerce.Models.PessoaModel", b =>
                {
                    b.Navigation("Enderecos");

                    b.Navigation("Pedidos");

                    b.Navigation("Telefones");
                });
#pragma warning restore 612, 618
        }
    }
}
